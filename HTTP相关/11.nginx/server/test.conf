proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m;

server {
    listen       80;
    server_name  test.com;

    location / {
        proxy_cache my_cache;
        # 代理服务器修改host
        proxy_pass  http://127.0.0.1:8888;
        # 显示客户端的host
        # 对于nginx来说: 此处就是用来区分实际访问的是哪个服务
        proxy_set_header Host $host; 
    }
}

server {
    listen       80;
    server_name  testb.com;

    location / {
        # 代理服务器修改host
        proxy_pass  http://127.0.0.1:8888;
        # 显示客户端的host
        # 对于nginx来说: 此处就是用来区分实际访问的是哪个服务
        proxy_set_header Host $host; 
    }
}

# server {
#     listen       443;
#     server_name  suoling.com;

#     ssl on;
#     ssl_certificate_key   /home/wsl/source/http/http_test/localhost-privkey.pem;
#     ssl_certificate  /home/wsl/source/http/http_test/localhost-cert.pem;

#     location / {
#         # 代理服务器修改host
#         proxy_pass  http://127.0.0.1:8888;
#         # 显示客户端的host
#         # 对于nginx来说: 此处就是用来区分实际访问的是哪个服务
#         proxy_set_header Host $host; 

#     }
# }

# server {
#     listen       80       default_server;
#     listen       [::]:80  default_server;
#     server_name  suoling.com;
#     return 302 https://$server_name$request_uri;
# }

server {
    listen       443 http2;
    server_name  suoling.com;
    http2_push_preload on;

    ssl on;
    ssl_certificate_key   /Users/admin/source/wsl-my_http/localhost-privkey.pem;
    ssl_certificate  /Users/admin/source/wsl-my_http/localhost-cert.pem;

    location / {
        proxy_cache  my_cache;
        # 代理服务器修改host
        proxy_pass  http://127.0.0.1:8888;
        # 显示客户端的host
        # 对于nginx来说: 此处就是用来区分实际访问的是哪个服务
        proxy_set_header Host $host; 
        add_header  Strict-Transport-Security max-age=200;

    }
}

